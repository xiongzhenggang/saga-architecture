pipeline {
    agent any
    environment {
        // 定义环境变量，例如 Docker 镜像仓库的凭据
        DOCKER_REGISTRY = '127.0.0.1:5000'
        K8S_NAMESPACE = 'saga-servicemesh'
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/xiongzhenggang/saga-architecture.git', branch: 'main'
            }
        }
        stage('Build') {
         steps {
                //git url: 'https://github.com/xiongzhenggang/saga-architecture/tree/main/saga-architecture-authentication'
                withMaven {
                  sh "mvn clean package"
                }
              }
        }
        stage('Unit Tests') {
            steps {
              withMaven {
                    // 执行单元测试
                    sh "mvn test"
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // 构建 Docker 镜像
                    sh "docker build -t ${DOCKER_REGISTRY}/saga-architecture-authentication:latest ."
                    // 登录 Docker 仓库
                    sh "echo ${DOCKER_PASS} | docker login ${DOCKER_REGISTRY} -u ${DOCKER_USER} --password-stdin"
                    // 推送镜像到 Docker 仓库
                    sh "docker push ${DOCKER_REGISTRY}/saga-architecture-authentication:latest"
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // 部署到 Kubernetes
                    sh "kubectl set image deployment/your-deployment saga-architecture-authentication=${DOCKER_REGISTRY}/saga-architecture-authentication:latest -n ${K8S_NAMESPACE}"
                }
            }
        }
    }
    post {
        success {
            echo 'Deployment finished successfully.'
        }
        failure {
            echo 'Deployment failed.'
        }
    }
}