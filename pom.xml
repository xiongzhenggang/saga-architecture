<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>
  <modules>
    <module>saga-architecture-account</module>
    <module>saga-architecture-order</module>
    <module>saga-architecture-library-infrastructure</module>
    <module>saga-architecture-authentication</module>
    <module>saga-architecture-goods</module>
    <module>saga-architecture-orchestrator</module>
  </modules>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.2</version>
    <relativePath/> <!--3.2.0 lookup parent from repository -->
  </parent>
  <groupId>com.xzg</groupId>
  <artifactId>saga-architecture</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>saga-architecture</name>
  <description>Service Mesh Architecture Demonstrate with Istio Infrastructure</description>
  <properties>
    <docker.registry>registry.docker.com</docker.registry>
    <docker.registry.name>xiongzhenggang</docker.registry.name>
    <docker.registry.password>password</docker.registry.password>
    <image.namespace>${docker.registry.name}</image.namespace>
    <kube.context>docker-desktop</kube.context>
    <kube.namespace>default</kube.namespace>
    <ingress.host>localhost</ingress.host>
    <base.image>eclipse-temurin:21-jre</base.image>
    <pod.replicas>1</pod.replicas>
    <target.jar.filename>${project.artifactId}.jar</target.jar.filename>
    <git-commit.id-maven-version>9.0.0</git-commit.id-maven-version>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
    <image.tag>${project.version}</image.tag>
    <maven.exec.plugin.version>3.3.0</maven.exec.plugin.version>
    <jkube.version>1.16.1</jkube.version>
    <git-commit.id-maven-version>9.0.0</git-commit.id-maven-version>

    <java.version>21</java.version>
    <spring-cloud-kubernetes.version>3.0.4</spring-cloud-kubernetes.version>
<!--    2023.0.0  2022.0.4-->
    <spring.cloud.version>2023.0.3</spring.cloud.version>
    <fabric8-maven-version>4.4.2</fabric8-maven-version>
    <lombok.version>1.18.30</lombok.version>
    <jwt.version>0.12.3</jwt.version>
    <caffeine.version>3.1.8</caffeine.version>
    <mysql.version>8.0.33</mysql.version>
    <saga-archiecture-version>1.0-SNAPSHOT</saga-archiecture-version>
    <common-lang3.version>3.16.0</common-lang3.version>
    <agrona.version>1.20.0</agrona.version>
    <prometheus.version>1.13.2</prometheus.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.xzg</groupId>
        <artifactId>saga-architecture-library-infrastructure</artifactId>
        <version>${saga-archiecture-version}</version>
      </dependency>
      <!-- https://mvnrepository.com/artifact/commons-lang3/commons-lang -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${common-lang3.version}</version>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.agrona/agrona -->
      <dependency>
        <groupId>org.agrona</groupId>
        <artifactId>agrona</artifactId>
        <version>${agrona.version}</version>
      </dependency>
      <!-- https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus -->
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <version>${prometheus.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>
  <build>
    <!-- pluginManagement是表示插件声明，即你在项目中的pluginManagement下声明了插件，Maven不会加载该插件，pluginManagement声明可以被继承。-->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>io.github.git-commit-id</groupId>
              <artifactId>git-commit-id-maven-plugin</artifactId>
              <version>${git-commit.id-maven-version}</version>
              <executions>
                      <execution>
                            <id>get-the-git-infos</id>
                            <goals>
                                  <goal>revision</goal>
                            </goals>
                            <phase>initialize</phase>
                      </execution>
              </executions>
          <configuration>
                  <verbose>false</verbose>
          <dateFormat>yyyyMMddHHmmss</dateFormat>
          <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
          <generateGitPropertiesFile>false</generateGitPropertiesFile>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${maven.exec.plugin.version}</version>
          <executions>
            <execution>
              <id>set_context</id>
              <phase>compile</phase>
              <goals>
                <goal>exec</goal>
              </goals>
              <configuration>
                <executable>kubectl</executable>
                <arguments>
                  <argument>config</argument>
                  <argument>use-context</argument>
                  <argument>${kube.context}</argument>
                </arguments>
                <successCodes>0</successCodes>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.eclipse.jkube</groupId>
          <artifactId>kubernetes-maven-plugin</artifactId>
          <version>${jkube.version}</version>
          <configuration>
            <verbose>true</verbose>
            <registry>${docker.registry}</registry>
            <authConfig>
              <username>${docker.registry.name}</username>
              <password>${docker.registry.password}</password>
            </authConfig>
            <images>
              <image>
                <name>${image.namespace}/${project.artifactId}:${project.version}</name>
                <build>
                  <contextDir>${project.basedir}/src/main/docker</contextDir>
                  <dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
                  <filter>@</filter>
                  <tags>
                    <tag>${project.version}</tag>
                  </tags>
                </build>
              </image>
            </images>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>